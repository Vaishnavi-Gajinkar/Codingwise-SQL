## CS1 - Operations wants to see how much revenue each vendor made on each market day to plan booth pricing.
Approach: Compute daily gross revenue per vendor (quantity × cost_to_customer_per_qty) for all market dates

    WITH gros_rev AS (
        SELECT vi.vendor_id, cp.market_date, (cp.quantity*cp.cost_to_customer_per_qty) AS revenue FROM vendor_inventory vi JOIN customer_purchases cp WHERE cp.vendor_id=vi.vendor_id
        )
    SELECT vendor_id, market_date, SUM(revenue) AS total FROM gros_rev GROUP BY vendor_id, market_date ORDER BY vendor_id, market_date

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## CS2 - Category managers want a weekly leaderboard of products by total quantity sold.
For each (market_year, market_week), list the top 3 products by total quantity sold.

    WITH qty_sold AS (
        SELECT mdi.market_year, mdi.market_week, p.product_id, cp.quantity 
        FROM product p JOIN customer_purchases cp ON p.product_id=cp.product_id 
                    JOIN market_date_info mdi on cp.market_date=mdi.market_date
    )
    SELECT * FROM (
    SELECT *, RANK() OVER(PARTITION BY market_year ORDER BY tot_qty_sold DESC) AS rnk FROM(
    SELECT market_year, market_week, product_id, SUM(quantity) AS tot_qty_sold FROM qty_sold
    GROUP BY mdi.market_year, mdi.market_week, p.product_id ORDER BY market_year, market_week, product_id) AS sub_sub) AS sub WHERE rnk < 4

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## CS3 - Marketing wants to understand seasonal behavior (e.g., “Summer” vs “Fall”).
Compute average quantity purchased per transaction per customer per season.

    WITH qty_per_szn AS (
        SELECT cp.customer_id, mdi.market_season, AVG(cp.quantity) 
        FROM market_date_info mdi JOIN customer_purchases cp ON cp.market_date=mdi.market_date 
        GROUP BY cp.customer_id, mdi.market_season
        ORDER BY cp.customer_id, mdi.market_season
        )
    SELECT * FROM qty_per_szn

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## CS4 - To optimize staffing, ops wants to split sales into morning (≤12:00) vs afternoon (>12:00)
For each day, compute morning revenue vs afternoon revenue

    WITH tod AS (
    SELECT *, CASE WHEN transaction_time < '12:00:00' THEN 'morning'
                WHEN transaction_time > '17:00:00' THEN 'evening'
                ELSE 'afternoon' END AS 'prahar'
    FROM customer_purchases 
    )

    SELECT market_date, prahar, SUM(quantity*cost_to_customer_per_qty) AS revenue FROM tod
    GROUP BY market_date, prahar
    ORDER BY market_date,
        CASE prahar WHEN 'morning' THEN 1
                    WHEN 'afternoon' THEN 2
                    WHEN 'evening' THEN 3
                END ASC

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
