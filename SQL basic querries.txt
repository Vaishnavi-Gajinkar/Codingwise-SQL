Basic SQL concepts - (SELECT, FROM, *, 	ORDER BY, LIMIT, OFFSET)
----------------------------------------------------------------------------------------------------------------------------------------------------------
1. Display all records from the 'customer' table
	SELECT * FROM customer
2. Show all data stored in 'vendor' table
	SELECT * FROM vendor
3. List the entire contents of the 'product' table
	SELECT * FROM product
4. Retrieve all columns from the 'market_date_info' table
	SELECT * FROM market_date_info
5. Show every row from the 'booth' table without any filter
	SELECT * FROM booth
6. Select all rows from the vendor_booth_assignments table
	SELECT * FROM vendor_booth_assignments
7. Display all fields for all vendors who have been recorded
	SELECT * FROM vendor
8. Retrieve the complete dataset from the 'customer_purchases' table
	SELECT * FROM customer_purchases
9. Show every record present in 'vendor_inventory' table
	SELECT * FROM vendor_inventory
10. Select and display everything stored in the 'product_category' table
	SELECT * FROM product_category
11. Display all records from customer_purchases and sort them by quantity in ascending order
	SELECT * FROM customer_purchases ORDER BY quantity asc
12. Show all records from customer_purchases sorted by quantity in descending order
	SELECT * FROM customer_purchases ORDER BY quantity desc
13. List all products from product table ordered by product_name alphabetically
	SELECT * FROM product ORDER BY product_name asc
14. Show vendors sorted by vendor_name in descending
	SELECT * FROM vendors ORDER BY vendor_name desc
15. Display customer records sorted by customer_last_name in ascending order
	SELECT * FROM customer ORDER BY customer_last_name asc
16. Retrieve market dates sorted from the earliest to latest in the market_date_info table
	SELECT market_date FROM market_date_info ORDER BY market_date
17. Show product categories ordered by product_category_name in reverse alphabetical order
	SELECT product_category_name AS pcm FROM product_category ORDER BY pcm desc
18. List all booth records sorted by booth_price_level from lowest to highest
	SELECT * FROM booth ORDER BY booth_price_level asc
19. Display all vendor inventory entries ordered by original price in descending order
	SELECT * FROM vendor_inventory ORDER BY original_price desc
20. Show all booth records ordered by booth_type alphabetically
	SELECT * FROM booth ORDER BY booth_type
21. Display the first 5 entries from the customer table
	SELECT * FROM customer LIMIT 5
22. Show the top 10 rows from the vendor_inventory table
	SELECT * FROM vendor_inventory LIMIT 10
23. List the first 3 products from the product table
	SELECT * FROM product LIMIT 3
24. Retrieve top 7 entries from the market_date_info table
	SELECT * FROM market_date_info LIMIT 7
25. Show the first 2 records from the vendor_booth_assignments table 
	SELECT * FROM vendor_booth_assignments LIMIT 2
26. Display only the first record from the product_category table
	SELECT * FROM product_category LIMIT 1
27. Show the top 6 rows from the datetime_demo table
	SELECT * FROM datetime_demo LIMIT 6				# check
28. Return the first 4 vendors in the vendor table
	SELECT * FROM vendor LIMIT 4
29. Show the first 8 booths from the booth table
	SELECT * FROM booth LIMIT 8
30. List the top 9 purchases from the customer_purchases table
	SELECT * FROM customer_purchases LIMIT 9
31. Skip the first 3 entries in product and show the next 4
	SELECT * FROM product LIMIT 3,4
32. Display 5 records from customer_purchases, starting from 6th record
	SELECT * FROM customer_purchases LIMIT 6,5
33. Retrieve 2 rows from the vendor_inventory after skipping the first 5
	SELECT * FROM vendor_inventory LIMIT 5,2
34. List 4 booths from the booth table starting from the 3rd record
	SELECT * FROM booth LIMIT 3, 4
35. Show 3 products from the product table, starting after the first 6
	SELECT * FROM product LIMIT 6,3
36. Display 2 customer records after skipping the first 2 entries
	SELECT * FROM customer LIMIT 2,2
37. Show the 4th to 8th vendors from the vendor table
	SELECT * FROM vendor LIMIT 3,5
38. Retrieve 3 records from the market_date_info table after skipping 7 entries
	SELECT * FROM market_date_info LIMIT 7,3
39. List 5 rows from vendor_booth_assignments starting at record 10
	SELECT * FROM vendor_booth_assignments LIMIT 9,5
40. Show 6 rows from customer beginning at 5th record
	SELECT * FROM customer LIMIT 4,6
41. Display the top 5 highest priced items from vendor_inventory by original_price
	SELECT * FROM vendor_inventory ORDER BY original_price DESC LIMIT 5
42. Show the first 3 vendors ordered by their vendor_name alphabetically
	SELECT * FROM vendor ORDER BY vendor_name LIMIT 3
43. List 4 product categories ordered by product_category_name, skipping the first 2
	SELECT product_category_name FROM product_category ORDER BY product_category_name LIMIT 2,4
44. Show 6 customer names sorted by customer_first_name, starting from the 3rd one	
	SELECT customer_first_name FROM customer ORDER BY customer_first_name LIMIT 3,6
45. List 5 product names in reverse order from product, starting after the 2nd record
	SELECT product_name FROM product ORDER BY product_name DESC LIMIT 2,5
46. Display 4 booths ordered by booth_number, but skip the 1st one
	SELECT * FORM booth ORDER BY booth_number LIMIT 1,4
47. Show 7 purchases sorted by transaction_time, starting from the 4th entry
	SELECT * FROM customer_purchases ORDER BY transaction_time LIMIT 4, 7
48. List 3 earliest market dates from market_date_info, skipping the 1st one
	SELECT * FROM market_date_info ORDER BY market_date LIMIT 1, 3
49. Show 4 entries from datetime_demo sorted by market_start_datetime, starting from the 2nd
	SELECT * FROM datetime_demo ORDER BY market_start_datetime LIMIT 2,4
50. Display 5 vendor names ordered descending by vendor_type, skip the first 3
	SELECT vendor_name FROM vendor ORDER BY vendor_type DESC LIMIT 3,5
51. Show all customer records, ordered by customer_last_name and then customer_first_name alphabetically
	SELECT * FROM customer ORDER BY customer_last_name, customer_first_name
52. Display all products ordered by product_category_id and then product_name ascending
	SELECT * FROM product ORDER BY product_category_id, product_name
53. List all vendor inventory entries sorted by market_date ascending and original_price descending
	SELECT * FROM vendor_inventory ORDER BY market_date, original_price DESC
54. Show all records from customer_purchases sorted by market_date and then quantity in descending order
	SELECT * FROM customer_purchases ORDER BY market_date, quantity DESC
55. Display vendor_booth_assignments ordered by market_date and then by booth_number ascending
	SELECT * FROM vendor_booth_assignments ORDER BY market_date, booth_number
56. Retrieve all booths ordered by booth_type and then booth_price_level descending
	SELECT * FROM booth ORDER BY booth_type, booth_price_level DESC
57. List vendors ordered by vendor_type, and within each type, by vendor_name alphabetically	
	SELECT * FROM vendor ORDER BY vendor_type, vendor_name
58. Show products ordered by product_qty_type ascending and then by product_size descending
	SELECT * FROM product ORDER by product_qty_type, product_size DESC								# clarify
59. Display market information ordered by market_year, and then market_week within each year
	SELECT * FROM market_date_info ORDER BY market_year, market_week
60. Show datetime demo records ordered first by market_date, and then by market_start_time ascending
	SELECT * FROM market_date_info ORDER BY market_date, market_start_time
61. Display all product categories ordered by product_category_name and then by product_category_id
	SELECT * FROM product_category ORDER BY product_category_name, product_category_id
62. Show customers ordered by customer_zip ascending and then by customer_last_name alphabetically
	SELECT * FROM customer ORDER BY customer_zip, customer_last_name
63. List vendor inventory entries sorted by vendor_id and then by product_id ascending
	SELECT * FROM vendor_inventory ORDER BY vendor_id, product_id
64. Retrieve customer purchases sorted by transaction_time ascending and then by cost_to_customer_per_qty descending
	SELECT * FROM customer_purchases ORDER BY transaction_time, cost_to_customer_per_qty DESC
65. Show all booths ordered first by booth_price_level descending and then by booth_number ascending
	SELECT * FROM booth ORDER BY booth_price_level DESC, booth_number



