Questions with Window Functions, Joins & Table References
---------------------------------------------------------------------------------------------------------------------------
1. Use ROW_NUMBER to assign a unique ID to each customer from the 'customer' table ordered by customer_first_name, and return only those whose name starts with 'A'
    SELECT *, ROW_NUMBER() OVER (ORDER BY customer_first_name) AS 'chust_uniq_id'
    FROM customer WHERE customer_first_name LIKE 'A%'

2. For each customer from customer_purchases and customer, find their first purchase date using ROW_NUMBER, and display the corresponding 'product_id' and 'quantity'
    SELECT * FROM (SELECT cp.*, ROW_NUMBER() OVER(PARTITION BY c.customer_id ORDER BY market_date) AS 'txn_id' 
    FROM customer c LEFT JOIN customer_purchases cp ON c.customer_id = cp.customer_id) as sub WHERE txn_id = 1

3. Use DENSE_RANK() to rank vendors from the 'vendor' and 'vendor_booth_assignments' tables by number of booth assignments 
    SELECT *, DENSE_RANK() OVER(PARTITION BY booth_number ORDER BY vendor_id ) AS 'no.OfBoothAssignments' 
    FROM vendor v LEFT JOIN vendor_booth_assignments vba ON v.vendor_id = vba.vendor_id

4. Retrieve the top 3 most frequently purchased products per customer using RANK with joins btwn 'customer_purchases','product' & 'customer'
    SELECT * FROM
(SELECT cp.customer_id, cp.product_id, cp.quantity, DENSE_RANK() OVER (PARTITION BY customer_id ORDER BY quantity DESC) AS rnk
        FROM customer c JOIN customer_purchases cp ON c.customer_id = cp.customer_id) AS sub
WHERE rnk IN (1,2,3)

5. Use ROW_NUMBER to identify duplicate vendor names from the vendor table after applying TRIM and keep only the first occurance
    SELECT * FROM
    (SELECT vendor_name AS vendorName, ROW_NUMBER() OVER(PARTITION BY TRIM(vendor_name) ORDER BY vendor_name) AS rn FROM vendor) AS sub
    WHERE rn=1

6. Extract the first 3 letters of each customer's name from 'customer' using LEFT and assign a row number partitioned by zip code
    SELECT *, LEFT(customer_first_name, 3) AS cust_initials, ROW_NUMBER() OVER (PARTITION BY customer_zip) AS rn FROM customer

7. Rank vendors by revenue using DENSE_RANK from vendor, customer_purchases and product
    SELECT *, SUM(quantity*cost_to_customer_per_qty) AS revenue , DENSE_RANK() OVER (ORDER BY SUM(quantity*cost_to_customer_per_qty) DESC) AS rnk FROM customer_purchases GROUP BY vendor_id







